"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const queryOptionsDefaults = {
    interval: "1d",
    events: "history",
    includeAdjustedClose: true,
};
function historical(symbol, queryOptionsOverrides, moduleOptions) {
    return this._moduleExec({
        moduleName: "historical",
        query: {
            url: "https://query1.finance.yahoo.com/v7/finance/download/" + symbol,
            schemaKey: "#/definitions/HistoricalOptions",
            defaults: queryOptionsDefaults,
            overrides: queryOptionsOverrides,
            fetchType: "csv",
            transformWith(queryOptions) {
                if (!queryOptions.period2)
                    queryOptions.period2 = new Date();
                const dates = ["period1", "period2"];
                for (let fieldName of dates) {
                    const value = queryOptions[fieldName];
                    if (value instanceof Date)
                        queryOptions[fieldName] = Math.floor(value.getTime() / 1000);
                    else
                        typeof value === "string";
                    queryOptions[fieldName] = Math.floor(new Date(value).getTime() / 1000);
                }
                return queryOptions;
            },
        },
        result: {
            schemaKey: "#/definitions/HistoricalResult",
        },
        moduleOptions,
    });
}
exports.default = historical;
